// New test questions system
const testQuestions = [
    // –ë–ª–æ–∫ 1: –†–∞–±–æ—á–∏–π —Å—Ç–∏–ª—å –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è
    {
        block: 1,
        blockName: "–†–∞–±–æ—á–∏–π —Å—Ç–∏–ª—å –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è",
        text: "–ú–Ω–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ —á–µ—Ç–∫–æ–º—É, –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–º—É –ø–ª–∞–Ω—É, —á–µ–º –≤ —É—Å–ª–æ–≤–∏—è—Ö –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç–∏.",
        number: 1
    },
    {
        block: 1,
        blockName: "–†–∞–±–æ—á–∏–π —Å—Ç–∏–ª—å –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è",
        text: "–Ø –ø–æ–ª—É—á–∞—é –±–æ–ª—å—à–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç —Ä–∞–±–æ—Ç—ã, –∫–æ–≥–¥–∞ –º–æ–≥—É –≥–ª—É–±–æ–∫–æ —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–µ –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ.",
        number: 2
    },
    {
        block: 1,
        blockName: "–†–∞–±–æ—á–∏–π —Å—Ç–∏–ª—å –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è",
        text: "–î–ª—è –º–µ–Ω—è –≤–∞–∂–Ω–µ–µ —Ä–µ—à–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—É—é –∑–∞–¥–∞—á—É, —á–µ–º —É–≤–∏–¥–µ—Ç—å –±—ã—Å—Ç—Ä—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
        number: 3
    },
    {
        block: 1,
        blockName: "–†–∞–±–æ—á–∏–π —Å—Ç–∏–ª—å –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è",
        text: "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —É–ª—É—á—à–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –¥–µ–ª–∞—è –∏—Ö –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º–∏.",
        number: 4
    },
    {
        block: 1,
        blockName: "–†–∞–±–æ—á–∏–π —Å—Ç–∏–ª—å –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è",
        text: "–Ø –ª–µ–≥–∫–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è.",
        number: 5
    },
    // –ë–ª–æ–∫ 2: –õ–æ–≥–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ
    {
        block: 2,
        blockName: "–õ–æ–≥–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ",
        text: "–ö–æ–≥–¥–∞ —è —Å—Ç–∞–ª–∫–∏–≤–∞—é—Å—å —Å –æ—à–∏–±–∫–æ–π –≤ —Å–∏—Å—Ç–µ–º–µ, –º–æ—è –ø–µ—Ä–≤–∞—è —Ü–µ–ª—å ‚Äî –ø–æ–Ω—è—Ç—å –µ–µ –∫–æ—Ä–µ–Ω–Ω—É—é –ø—Ä–∏—á–∏–Ω—É, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å —Å–∏–º–ø—Ç–æ–º.",
        number: 6
    },
    {
        block: 2,
        blockName: "–õ–æ–≥–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ",
        text: "–Ø –ø–æ–ª—É—á–∞—é —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç —Ä–∞–±–æ—Ç—ã —Å —Ü–∏—Ñ—Ä–∞–º–∏, —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∏ –¥–∞–Ω–Ω—ã–º–∏, —á—Ç–æ–±—ã –Ω–∞—Ö–æ–¥–∏—Ç—å –≤ –Ω–∏—Ö —Å–∫—Ä—ã—Ç—ã–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ –∏ –∏–Ω—Å–∞–π—Ç—ã.",
        number: 7
    },
    {
        block: 2,
        blockName: "–õ–æ–≥–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ",
        text: "–ú–Ω–µ –ø—Ä–æ—â–µ –¥—É–º–∞—Ç—å –æ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö –≤ —Ü–µ–ª–æ–º, —á–µ–º –ø—Ä–æ–¥—É–º—ã–≤–∞—Ç—å –º–µ–ª–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –∏—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.",
        number: 8
    },
    {
        block: 2,
        blockName: "–õ–æ–≥–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ",
        text: "–ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏–ª–∏ —Ä–µ—à–µ–Ω–∏—è —è –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ, –Ω–∞–¥–µ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –∞ –Ω–µ —Å–∞–º—ã–µ –Ω–æ–≤–µ–π—à–∏–µ –∏ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ.",
        number: 9
    },
    {
        block: 2,
        blockName: "–õ–æ–≥–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ",
        text: "–ü—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π —è –ø–æ–ª–∞–≥–∞—é—Å—å –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ —Ñ–∞–∫—Ç—ã, –∞ –Ω–µ –Ω–∞ –∏–Ω—Ç—É–∏—Ü–∏—é –∏–ª–∏ –æ–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ.",
        number: 10
    },
    // –ë–ª–æ–∫ 3: –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ
    {
        block: 3,
        blockName: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ",
        text: "–Ø —á–∞—Å—Ç–æ –∑–∞–º–µ—á–∞—é –∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –æ—Ü–µ–Ω–∏–≤–∞—é –¥–∏–∑–∞–π–Ω –∏ —É–¥–æ–±—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å–∞–π—Ç–æ–≤ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–º–∏ –ø–æ–ª—å–∑—É—é—Å—å.",
        number: 11
    },
    {
        block: 3,
        blockName: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ",
        text: "–ú–Ω–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –æ–±—â—É—é –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞, —á–µ–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–æ–π –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.",
        number: 12
    },
    {
        block: 3,
        blockName: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ",
        text: "–î–ª—è –º–µ–Ω—è –≤ –ø—Ä–æ–¥—É–∫—Ç–µ –ø–µ—Ä–≤–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å —É–¥–æ–±—Å—Ç–≤–∞ –∏ –ª–æ–≥–∏—á–Ω–æ—Å—Ç–∏, –∞ –Ω–µ –µ–≥–æ –≤–Ω–µ—à–Ω–µ–π –∫—Ä–∞—Å–æ—Ç—ã.",
        number: 13
    },
    {
        block: 3,
        blockName: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ",
        text: "–ú–Ω–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–∞–º–∫–∞—Ö –≥–æ—Ç–æ–≤—ã—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ –∏ –≥–∞–π–¥–ª–∞–π–Ω–æ–≤, —á–µ–º –∏–º–µ—Ç—å –ø–æ–ª–Ω—É—é —Ç–≤–æ—Ä—á–µ—Å–∫—É—é —Å–≤–æ–±–æ–¥—É.",
        number: 14
    },
    {
        block: 3,
        blockName: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ",
        text: "–Ø —á–∞—Å—Ç–æ –∑–∞–º–µ—á–∞—é –º–µ–ª–∫–∏–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–∑–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã, —Ü–≤–µ—Ç–∞, —à—Ä–∏—Ñ—Ç—ã).",
        number: 15
    },
    // –ë–ª–æ–∫ 4: –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    {
        block: 4,
        blockName: "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
        text: "–ú–Ω–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤—ã—Å—Ç—É–ø–∞—Ç—å –ø–µ—Ä–µ–¥ –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π, –æ—Ç—Å—Ç–∞–∏–≤–∞—Ç—å —Å–≤–æ—é —Ç–æ—á–∫—É –∑—Ä–µ–Ω–∏—è –∏ –±—Ä–∞—Ç—å –Ω–∞ —Å–µ–±—è —Ä–æ–ª—å –ª–∏–¥–µ—Ä–∞.",
        number: 16
    },
    {
        block: 4,
        blockName: "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
        text: "–ú–Ω–µ –ª–µ–≥–∫–æ –æ–±—ä—è—Å–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–µ—â–∏ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –ª—é–¥—è–º, –¥–∞–ª–µ–∫–∏–º –æ—Ç —ç—Ç–æ–π —Ç–µ–º—ã.",
        number: 17
    },
    {
        block: 4,
        blockName: "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
        text: "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º —Å—Ä–æ–∫–æ–≤.",
        number: 18
    },
    {
        block: 4,
        blockName: "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
        text: "–ú–Ω–µ –±—ã–ª–æ –±—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –±—ã—Ç—å —Å–≤—è–∑—É—é—â–∏–º –∑–≤–µ–Ω–æ–º –º–µ–∂–¥—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –∏ –±–∏–∑–Ω–µ—Å-–∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏.",
        number: 19
    },
    {
        block: 4,
        blockName: "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
        text: "–í —Å–∏—Ç—É–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ —è —Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å.",
        number: 20
    },
    // –ë–ª–æ–∫ 5: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º
    {
        block: 5,
        blockName: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º",
        text: "–ú–Ω–µ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ \"–∏–∑–Ω—É—Ç—Ä–∏\", –Ω–∞ –≥–ª—É–±–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ.",
        number: 21
    },
    {
        block: 5,
        blockName: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º",
        text: "–Ø –ø–æ–ª—É—á–∞—é —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç —Ç–æ–Ω–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º –∏ —Å–∏—Å—Ç–µ–º, —á—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è –∏—Ö –∏–¥–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã.",
        number: 22
    },
    {
        block: 5,
        blockName: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º",
        text: "–Ø –º–æ–≥—É –¥–æ–ª–≥–æ –∏ —Ç—â–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –º–æ–Ω–æ—Ç–æ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É, —Ç—Ä–µ–±—É—é—â—É—é –≤—ã—Å–æ–∫–æ–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –≤–Ω–∏–º–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–¥–∞, –¥–∞–Ω–Ω—ã—Ö).",
        number: 23
    },
    {
        block: 5,
        blockName: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º",
        text: "–ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ \"—Å –Ω—É–ª—è\", —á–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π.",
        number: 24
    },
    {
        block: 5,
        blockName: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º",
        text: "–ú–µ–Ω—è –±–æ–ª—å—à–µ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ª–æ–≥–∏–∫–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å–∏—Å—Ç–µ–º—ã (–±—ç–∫–µ–Ω–¥), —á–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥).",
        number: 25
    }
];

// Career profiles mapping - –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
const careerProfiles = {
    1: {
        title: "–í–ù–ò–ú–ê–¢–ï–õ–¨–ù–´–ô –ò–°–ü–û–õ–ù–ò–¢–ï–õ–¨",
        role: "QA-–∏–Ω–∂–µ–Ω–µ—Ä (—Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫)",
        description: "–í—ã ‚Äî –≥–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –∫–∞—á–µ—Å—Ç–≤–∞. –í–∞—à–∞ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –¥–µ—Ç–∞–ª—è–º –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ –ø–æ–º–æ–≥–∞—é—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –¥–∞–∂–µ —Å–∞–º—ã–µ —Å–∫—Ä—ã—Ç—ã–µ –±–∞–≥–∏. –í—ã –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç–µ –∫–æ–º–∞–Ω–¥–µ –≤—ã–ø—É—Å—Ç–∏—Ç—å —Å—ã—Ä–æ–π –ø—Ä–æ–¥—É–∫—Ç, –∑–∞—â–∏—â–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—é –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
        characteristics: "–¶–µ–Ω–∏—Ç –ø–æ—Ä—è–¥–æ–∫, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, –¥–æ–≤–æ–¥–∏—Ç –∑–∞–¥–∞—á–∏ –¥–æ –∏–¥–µ–∞–ª–∞, –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω –∫ –¥–µ—Ç–∞–ª—è–º",
        roadmap: [
            {
                stage: "üéØ –°–¢–ê–†–¢",
                title: "–û—Å–≤–æ–∏—Ç—å —Ç–µ–æ—Ä–∏—é –∏ –ø—Ä–∞–∫—Ç–∏–∫—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
                courses: [
                    "QA-–∏–Ω–∂–µ–Ω–µ—Ä: –æ—Å–Ω–æ–≤—ã —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
                    "–¢–µ—Å—Ç-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –¥–∏–∑–∞–π–Ω —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤",
                    "–ë–∞–≥—Ä–µ–ø–æ—Ä—Ç—ã –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
                ]
            },
            {
                stage: "‚öôÔ∏è –†–ê–ó–í–ò–¢–ò–ï",
                title: "–ü–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é",
                courses: [
                    "–û—Å–Ω–æ–≤—ã SQL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–æ–≤",
                    "–ê–≤—Ç–æ-—Ç–µ—Å—Ç—ã –Ω–∞ Selenium WebDriver",
                    "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API: Postman –∏ Swagger"
                ]
            },
            {
                stage: "üöÄ –¢–†–£–î–û–£–°–¢–†–û–ô–°–¢–í–û",
                title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Ä–∞–±–æ—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ",
                courses: [
                    "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
                    "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ QA-–∏–Ω–∂–µ–Ω–µ—Ä–∞: —Ä–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã",
                    "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é QA"
                ]
            }
        ],
        alternativeRoles: [
            "–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫ –∏–≥—Ä (Game QA)",
            "QA Automation Engineer",
            "Performance Test Engineer",
            "Security QA Engineer",
            "QA Team Lead"
        ]
    },
    2: {
        title: "–ê–ù–ê–õ–ò–¢–ò–ö –ò –ö–û–ù–°–¢–†–£–ö–¢–û–†", 
        role: "Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
        description: "–í—ã ‚Äî –º–∞—Å—Ç–µ—Ä –ª–æ–≥–∏–∫–∏. –í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã, —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏ –∏ –¥–∞–Ω–Ω—ã–º–∏. –í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ ‚Äî —ç—Ç–æ –º–æ—â–Ω—ã–π ¬´–º–æ–∑–≥¬ª –ª—é–±–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –≤–∏–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –Ω–æ –±–µ–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.",
        characteristics: "–ú—ã—Å–ª–∏—Ç —Å–∏—Å—Ç–µ–º–Ω–æ, –ª—é–±–∏—Ç –¥–∞–Ω–Ω—ã–µ, –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
        roadmap: [
            {
                stage: "üéØ –°–¢–ê–†–¢", 
                title: "–û—Å–≤–æ–∏—Ç—å –±–∞–∑–æ–≤—ã–π —è–∑—ã–∫ –∏ –æ—Å–Ω–æ–≤—ã",
                courses: [
                    "Python/Java/C# —Å –Ω—É–ª—è",
                    "–û—Å–Ω–æ–≤—ã Git –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞",
                    "–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö"
                ]
            },
            {
                stage: "‚öôÔ∏è –†–ê–ó–í–ò–¢–ò–ï",
                title: "–ù–∞—É—á–∏—Ç—å—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", 
                courses: [
                    "Django/Spring/.NET: —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
                    "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ SQL –¥–ª—è Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
                    "REST API –∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã"
                ]
            },
            {
                stage: "üöÄ –¢–†–£–î–û–£–°–¢–†–û–ô–°–¢–í–û",
                title: "–ü—Ä–æ–∫–∞—á–∞—Ç—å —Å–∫–∏–ª–ª—ã –¥–ª—è –¥–∂—É–Ω–∞",
                courses: [
                    "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞",
                    "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞",
                    "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
                ]
            }
        ],
        alternativeRoles: [
            "Java Developer",
            "Python Developer",
            "C# .NET Developer",
            "Node.js Developer",
            "Go Developer",
            "System Architect"
        ]
    },
    3: {
        title: "–í–ò–ó–£–ê–õ–¨–ù–´–ô –°–û–ó–ò–î–ê–¢–ï–õ–¨",
        role: "UI/UX-–¥–∏–∑–∞–π–Ω–µ—Ä", 
        description: "–í—ã ‚Äî –≥–æ–ª–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–∞–Ω–¥–µ. –í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —ç—Å—Ç–µ—Ç–∏–∫—É, –æ–±—Ä–∞—â–∞–µ—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–µ—Ç–∞–ª–∏ –∏ –¥—É–º–∞–µ—Ç–µ –æ —Ç–æ–º, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Å–∏–≤—ã–º, –Ω–æ –∏ —É–¥–æ–±–Ω—ã–º. –í—ã —Å–æ–∑–¥–∞–µ—Ç–µ —Ç–æ—Ç —Å–∞–º—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —Å –∫–æ—Ç–æ—Ä—ã–º –±—É–¥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –ª—é–¥–∏.",
        characteristics: "–í–Ω–∏–º–∞—Ç–µ–ª–µ–Ω –∫ –¥–µ—Ç–∞–ª—è–º, —ç–º–ø–∞—Ç–∏—á–µ–Ω –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —Ü–µ–Ω–∏—Ç —ç—Å—Ç–µ—Ç–∏–∫—É –∏ —É–¥–æ–±—Å—Ç–≤–æ",
        roadmap: [
            {
                stage: "üéØ –°–¢–ê–†–¢",
                title: "–ü–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤—ã –¥–∏–∑–∞–π–Ω–∞ –∏ –æ—Å–≤–æ–∏—Ç—å Figma",
                courses: [
                    "UI/UX-–¥–∏–∑–∞–π–Ω: –æ—Ç –∏–¥–µ–∏ –∫ –ø–µ—Ä–≤–æ–º—É –º–∞–∫–µ—Ç—É", 
                    "Figma —Å –Ω—É–ª—è –¥–æ PRO",
                    "–û—Å–Ω–æ–≤—ã —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∏ –∏ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏"
                ]
            },
            {
                stage: "‚öôÔ∏è –†–ê–ó–í–ò–¢–ò–ï",
                title: "–ù–∞—É—á–∏—Ç—å—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã",
                courses: [
                    "UX-–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: –∫–∞–∫ –ø–æ–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    "–ú–æ–±–∏–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω: –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã iOS –∏ Android",
                    "–ü—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞–Ω–∏–º–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤"
                ]
            },
            {
                stage: "üöÄ –¢–†–£–î–û–£–°–¢–†–û–ô–°–¢–í–û", 
                title: "–°–æ–±—Ä–∞—Ç—å —Å–∏–ª—å–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
                courses: [
                    "–í–µ–±-–¥–∏–∑–∞–π–Ω: –æ—Ç –ª–µ–Ω–¥–∏–Ω–≥–∞ –¥–æ —Å–ª–æ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã",
                    "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–∞",
                    "–†–∞–±–æ—Ç–∞ –≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥–µ"
                ]
            }
        ],
        alternativeRoles: [
            "Product Designer",
            "UX Researcher",
            "Visual Designer",
            "Interaction Designer",
            "Motion Designer",
            "Design System Manager"
        ]
    },
    4: {
        title: "–û–†–ì–ê–ù–ò–ó–ê–¢–û–† –ò –õ–ò–î–ï–†",
        role: "Project/Product Manager",
        description: "–í—ã ‚Äî –º–æ—Ç–æ—Ä –∏ –∫–æ–º–ø–∞—Å –∫–æ–º–∞–Ω–¥—ã. –í—ã –≤–∏–¥–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç —Ü–µ–ª–∏–∫–æ–º, —É–º–µ–µ—Ç–µ —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã, –æ–±—â–∞—Ç—å—Å—è —Å –∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏ –∏ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. –í—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –∑–∞ —Ç–æ, —á—Ç–æ–±—ã –ø—Ä–æ–µ–∫—Ç –±—ã–ª —Å–¥–µ–ª–∞–Ω –≤ —Å—Ä–æ–∫, –≤ —Ä–∞–º–∫–∞—Ö –±—é–¥–∂–µ—Ç–∞ –∏ —Ä–µ—à–∏–ª –Ω—É–∂–Ω—É—é –±–∏–∑–Ω–µ—Å—É –∑–∞–¥–∞—á—É.",
        characteristics: "–•–æ—Ä–æ—à–æ –æ–±—ä—è—Å–Ω—è–µ—Ç, –æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å—ã, –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É, –≤–∏–¥–∏—Ç –∫–∞—Ä—Ç–∏–Ω—É —Ü–µ–ª–∏–∫–æ–º", 
        roadmap: [
            {
                stage: "üéØ –°–¢–ê–†–¢",
                title: "–ü–æ–Ω—è—Ç—å –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ –∏ –æ—Å–Ω–æ–≤—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                courses: [
                    "Project Management: –æ—Å–Ω–æ–≤—ã –∏ Agile (Scrum, Kanban)",
                    "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞: Jira, Confluence, Notion",
                    "–û—Å–Ω–æ–≤—ã –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑–∞"
                ]
            },
            {
                stage: "‚öôÔ∏è –†–ê–ó–í–ò–¢–ò–ï",
                title: "–û—Å–≤–æ–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∏ –∫–æ–º–∞–Ω–¥–æ–π",
                courses: [
                    "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑ –¥–ª—è IT-–º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤",
                    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
                    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–º (Product Management)"
                ]
            },
            {
                stage: "üöÄ –¢–†–£–î–û–£–°–¢–†–û–ô–°–¢–í–û",
                title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É —Ä–∞–±–æ—Ç—ã", 
                courses: [
                    "–§–∏–Ω–∞–Ω—Å—ã –∏ –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤",
                    "–ö–µ–π—Å—ã –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –≤ IT-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç",
                    "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏"
                ]
            }
        ],
        alternativeRoles: [
            "Scrum Master",
            "Product Owner",
            "Program Manager",
            "Delivery Manager",
            "Business Analyst",
            "Product Lead"
        ]
    },
    5: {
        title: "–ò–ù–ñ–ï–ù–ï–† –ò –ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨", 
        role: "DevOps-–∏–Ω–∂–µ–Ω–µ—Ä",
        description: "–í—ã ‚Äî –≥–∞—Ä–∞–Ω—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞. –í–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ –∫–æ–¥ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ä–∞–±–æ—Ç–∞—é—â–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º, –∫–∞–∫ –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è –º–∏–ª–ª–∏–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–∞–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å—ë, —á—Ç–æ –º–æ–∂–Ω–æ. –í—ã —Å—Ç–æ–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–∂–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏.",
        characteristics: "–õ—é–±–∏—Ç –∫–æ–ø–∞—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å",
        roadmap: [
            {
                stage: "üéØ –°–¢–ê–†–¢",
                title: "–ü–æ–ª—É—á–∏—Ç—å –±–∞–∑–æ–≤—ã–µ IT-–Ω–∞–≤—ã–∫–∏",
                courses: [
                    "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python",
                    "Linux –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
                    "–û—Å–Ω–æ–≤—ã —Å–µ—Ç–µ–π –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã"
                ]
            },
            {
                stage: "‚öôÔ∏è –†–ê–ó–í–ò–¢–ò–ï", 
                title: "–û—Å–≤–æ–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ DevOps-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
                courses: [
                    "Docker –∏ Kubernetes: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è –∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è", 
                    "–ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ –¥–æ—Å—Ç–∞–≤–∫–∞ (CI/CD)",
                    "–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞–∫ –∫–æ–¥ (Terraform, Ansible)"
                ]
            },
            {
                stage: "üöÄ –¢–†–£–î–û–£–°–¢–†–û–ô–°–¢–í–û",
                title: "–£–≥–ª—É–±–∏—Ç—å—Å—è –≤ –æ–±–ª–∞–∫–∞ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É",
                courses: [
                    "–û–±–ª–∞—á–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: AWS Fundamentals",
                    "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: Prometheus, Grafana",
                    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã"
                ]
            }
        ],
        alternativeRoles: [
            "Site Reliability Engineer (SRE)",
            "Cloud Engineer",
            "Infrastructure Engineer",
            "Platform Engineer",
            "DevSecOps Engineer",
            "Systems Administrator"
        ]
    }
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ IT –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
const additionalITFields = {
    dataScience: {
        title: "DATA SCIENCE & AI",
        roles: [
            {
                name: "Data Scientist",
                description: "–°—Ç—Ä–æ–∏—Ç –º–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö",
                skills: ["Python", "ML", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "Pandas", "SQL"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            },
            {
                name: "Data Analyst", 
                description: "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏–π",
                skills: ["SQL", "Excel", "Tableau", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è"],
                level: "–ù–∞—á–∞–ª—å–Ω—ã–π/–°—Ä–µ–¥–Ω–∏–π"
            },
            {
                name: "ML Engineer",
                description: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏ –≤–Ω–µ–¥—Ä—è–µ—Ç –º–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –≤ production",
                skills: ["Python", "TensorFlow", "MLOps", "Docker", "AWS"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            },
            {
                name: "AI Researcher",
                description: "–ò—Å—Å–ª–µ–¥—É–µ—Ç –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞",
                skills: ["Python", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "Research", "PyTorch", "–ê–ª–≥–æ—Ä–∏—Ç–º—ã"],
                level: "–°—Ç–∞—Ä—à–∏–π/–≠–∫—Å–ø–µ—Ä—Ç"
            }
        ]
    },
    cybersecurity: {
        title: "–ö–ò–ë–ï–†–ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨",
        roles: [
            {
                name: "Security Analyst",
                description: "–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —É–≥—Ä–æ–∑—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
                skills: ["SIEM", "–°–µ—Ç–∏", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "Incident Response", "Linux"],
                level: "–ù–∞—á–∞–ª—å–Ω—ã–π/–°—Ä–µ–¥–Ω–∏–π"
            },
            {
                name: "Penetration Tester",
                description: "–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—ã –Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–æ–º —ç—Ç–∏—á–Ω–æ–≥–æ –≤–∑–ª–æ–º–∞",
                skills: ["Kali Linux", "Metasploit", "–°–µ—Ç–∏", "Web Security", "Reporting"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            },
            {
                name: "Security Engineer",
                description: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏ –≤–Ω–µ–¥—Ä—è–µ—Ç —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
                skills: ["Python", "Firewalls", "Cryptography", "AWS Security", "DevSecOps"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            }
        ]
    },
    mobile: {
        title: "–ú–û–ë–ò–õ–¨–ù–ê–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ê",
        roles: [
            {
                name: "iOS Developer",
                description: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iPhone –∏ iPad",
                skills: ["Swift", "UIKit", "Xcode", "Core Data", "App Store"],
                level: "–ù–∞—á–∞–ª—å–Ω—ã–π/–°—Ä–µ–¥–Ω–∏–π"
            },
            {
                name: "Android Developer",
                description: "–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –Ω–∞ Android",
                skills: ["Kotlin", "Android SDK", "Java", "Material Design", "Google Play"],
                level: "–ù–∞—á–∞–ª—å–Ω—ã–π/–°—Ä–µ–¥–Ω–∏–π"
            },
            {
                name: "React Native Developer",
                description: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                skills: ["JavaScript", "React", "Native Modules", "Redux", "TypeScript"],
                level: "–°—Ä–µ–¥–Ω–∏–π"
            },
            {
                name: "Flutter Developer",
                description: "–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iOS –∏ Android –Ω–∞ –æ–¥–Ω–æ–º –∫–æ–¥–µ",
                skills: ["Dart", "Flutter SDK", "Widgets", "Bloc", "Firebase"],
                level: "–ù–∞—á–∞–ª—å–Ω—ã–π/–°—Ä–µ–¥–Ω–∏–π"
            }
        ]
    },
    frontend: {
        title: "FRONTEND –†–ê–ó–†–ê–ë–û–¢–ö–ê",
        roles: [
            {
                name: "Frontend Developer",
                description: "–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
                skills: ["JavaScript", "React", "HTML/CSS", "TypeScript", "Webpack"],
                level: "–ù–∞—á–∞–ª—å–Ω—ã–π/–°—Ä–µ–¥–Ω–∏–π"
            },
            {
                name: "Frontend Architect",
                description: "–ü—Ä–æ–µ–∫—Ç–∏—Ä—É–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–ª–æ–∂–Ω—ã—Ö frontend-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
                skills: ["Architecture", "Performance", "Micro-frontends", "SSR", "Testing"],
                level: "–°—Ç–∞—Ä—à–∏–π/–≠–∫—Å–ø–µ—Ä—Ç"
            },
            {
                name: "Fullstack Developer",
                description: "–†–∞–±–æ—Ç–∞–µ—Ç –∏ —Å frontend, –∏ —Å backend —á–∞—Å—Ç—è–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                skills: ["JavaScript", "Node.js", "React", "Databases", "DevOps"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            }
        ]
    },
    gameDev: {
        title: "GAME DEVELOPMENT",
        roles: [
            {
                name: "Game Developer",
                description: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–≥—Ä–æ–≤—É—é –ª–æ–≥–∏–∫—É –∏ –º–µ—Ö–∞–Ω–∏–∫—É",
                skills: ["C++", "Unity", "Unreal Engine", "Game Physics", "AI"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            },
            {
                name: "Game Designer",
                description: "–ü—Ä–æ–µ–∫—Ç–∏—Ä—É–µ—Ç –≥–µ–π–º–ø–ª–µ–π, —É—Ä–æ–≤–Ω–∏ –∏ –∏–≥—Ä–æ–≤—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏",
                skills: ["Design", "Balance", "Prototyping", "Narrative", "UX"],
                level: "–ù–∞—á–∞–ª—å–Ω—ã–π/–°—Ä–µ–¥–Ω–∏–π"
            },
            {
                name: "VR/AR Developer",
                description: "–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏",
                skills: ["Unity", "3D Math", "VR SDK", "Optimization", "3D Modeling"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            }
        ]
    },
    blockchain: {
        title: "BLOCKCHAIN & WEB3",
        roles: [
            {
                name: "Blockchain Developer",
                description: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                skills: ["Solidity", "Web3.js", "Ethereum", "Smart Contracts", "Cryptography"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            },
            {
                name: "Smart Contract Auditor",
                description: "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤",
                skills: ["Solidity", "Security", "Testing", "DeFi", "Audit Tools"],
                level: "–°—Ç–∞—Ä—à–∏–π/–≠–∫—Å–ø–µ—Ä—Ç"
            }
        ]
    },
    embedded: {
        title: "EMBEDDED & IOT",
        roles: [
            {
                name: "Embedded Developer",
                description: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã",
                skills: ["C/C++", "RTOS", "Electronics", "Debugging", "Hardware"],
                level: "–°—Ä–µ–¥–Ω–∏–π/–°—Ç–∞—Ä—à–∏–π"
            },
            {
                name: "IoT Engineer",
                description: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –≤–µ—â–µ–π",
                skills: ["Python", "MQTT", "Sensors", "Cloud IoT", "Networking"],
                level: "–°—Ä–µ–¥–Ω–∏–π"
            }
        ]
    }
};

// Test Management
class TestManager {
    constructor() {
        this.currentQuestionIndex = 0;
        this.answers = [];
        this.results = null;
        this.blockScores = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0};
        this.blockCounts = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0};
    }

    initializeTest() {
        this.showWelcomeScreen();
    }

    showWelcomeScreen() {
        const testContent = document.getElementById('testContent');
        testContent.innerHTML = `
            <div class="welcome-card">
                <div class="welcome-icon">üß©</div>
                <h2>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫ —Ç–µ—Å—Ç—É</h2>
                <div class="instruction">
                    <p><strong>–û—Ü–µ–Ω–∏—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–∂–¥–æ–µ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—Å, –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 5:</strong></p>
                    <div class="scale-info">
                        <div class="scale-item">
                            <span class="scale-number">1</span>
                            <span class="scale-label">–°–æ–≤—Å–µ–º –Ω–µ –ø—Ä–æ –º–µ–Ω—è</span>
                        </div>
                        <div class="scale-item">
                            <span class="scale-number">2</span>
                            <span class="scale-label">–°–∫–æ—Ä–µ–µ –Ω–µ –ø—Ä–æ –º–µ–Ω—è</span>
                        </div>
                        <div class="scale-item">
                            <span class="scale-number">3</span>
                            <span class="scale-label">–û—Ç—á–∞—Å—Ç–∏ –ø–æ—Ö–æ–∂–µ, –æ—Ç—á–∞—Å—Ç–∏ –Ω–µ—Ç</span>
                        </div>
                        <div class="scale-item">
                            <span class="scale-number">4</span>
                            <span class="scale-label">–°–∫–æ—Ä–µ–µ –ø—Ä–æ –º–µ–Ω—è</span>
                        </div>
                        <div class="scale-item">
                            <span class="scale-number">5</span>
                            <span class="scale-label">–û—á–µ–Ω—å —Ç–æ—á–Ω–æ –ø—Ä–æ –º–µ–Ω—è</span>
                        </div>
                    </div>
                    <p class="instruction-note">–¢–µ—Å—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 25 –≤–æ–ø—Ä–æ—Å–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –Ω–∞ 5 –±–ª–æ–∫–æ–≤. –û—Ç–≤–µ—á–∞–π—Ç–µ —á–µ—Å—Ç–Ω–æ - —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!</p>
                </div>
                <button onclick="testManager.startTest()" class="btn btn-primary btn-hero">
                    <span class="btn-icon">üß©</span>
                    –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç
                </button>
            </div>
        `;
        this.updateProgress(0, 1);
    }

    startTest() {
        this.currentQuestionIndex = 0;
        this.answers = [];
        this.blockScores = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0};
        this.blockCounts = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0};
        this.showQuestion();
    }

    showQuestion() {
        const question = testQuestions[this.currentQuestionIndex];
        const testContent = document.getElementById('testContent');

        testContent.innerHTML = `
            <div class="question-card">
                <div class="question-header">
                    <div class="block-indicator">–ë–ª–æ–∫ ${question.block}: ${question.blockName}</div>
                    <div class="question-number">–í–æ–ø—Ä–æ—Å ${question.number}/25</div>
                </div>
                <h2 class="question-text">${question.text}</h2>
                <div class="rating-scale">
                    <div class="scale-labels">
                        <span>–°–æ–≤—Å–µ–º –Ω–µ –ø—Ä–æ –º–µ–Ω—è</span>
                        <span>–û—á–µ–Ω—å —Ç–æ—á–Ω–æ –ø—Ä–æ –º–µ–Ω—è</span>
                    </div>
                    <div class="rating-options">
                        ${[1, 2, 3, 4, 5].map(rating => `
                            <label class="rating-option">
                                <input type="radio" name="answer" value="${rating}" onchange="testManager.selectAnswer(${rating})">
                                <span class="rating-circle">${rating}</span>
                            </label>
                        `).join('')}
                    </div>
                </div>
                <div class="question-navigation">
                    <button onclick="testManager.previousQuestion()" class="btn btn-secondary" ${this.currentQuestionIndex === 0 ? 'disabled' : ''}>
                        ‚Üê –ù–∞–∑–∞–¥
                    </button>
                    <button onclick="testManager.nextQuestion()" class="btn btn-primary" id="nextButton" disabled>
                        ${this.currentQuestionIndex === testQuestions.length - 1 ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç' : '–î–∞–ª–µ–µ ‚Üí'}
                    </button>
                </div>
            </div>
        `;

        this.updateProgress(this.currentQuestionIndex + 1, question.block);
    }

    selectAnswer(rating) {
        const nextButton = document.getElementById('nextButton');
        nextButton.disabled = false;
        
        // Add visual feedback
        const options = document.querySelectorAll('.rating-option');
        options.forEach(option => {
            const input = option.querySelector('input');
            if (input.value == rating) {
                option.classList.add('selected');
            } else {
                option.classList.remove('selected');
            }
        });
    }

    nextQuestion() {
        const selectedRating = document.querySelector('input[name="answer"]:checked');
        if (!selectedRating && this.currentQuestionIndex < testQuestions.length - 1) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É');
            return;
        }

        if (selectedRating) {
            const question = testQuestions[this.currentQuestionIndex];
            const rating = parseInt(selectedRating.value);
            
            this.answers.push({
                questionId: question.number,
                block: question.block,
                rating: rating
            });

            // Update block scores
            this.blockScores[question.block] += rating;
            this.blockCounts[question.block]++;
        }

        this.currentQuestionIndex++;
        
        if (this.currentQuestionIndex < testQuestions.length) {
            this.showQuestion();
        } else {
            this.calculateResults();
        }
    }

    previousQuestion() {
        if (this.currentQuestionIndex > 0) {
            // Remove the last answer if exists
            if (this.answers.length > this.currentQuestionIndex - 1) {
                const lastAnswer = this.answers[this.currentQuestionIndex - 1];
                this.blockScores[lastAnswer.block] -= lastAnswer.rating;
                this.blockCounts[lastAnswer.block]--;
                this.answers.pop();
            }
            
            this.currentQuestionIndex--;
            this.showQuestion();
        }
    }

    updateProgress(current, block) {
        const progress = (current / testQuestions.length) * 100;
        document.getElementById('testProgress').style.width = `${progress}%`;
        document.getElementById('currentQuestion').textContent = current;
        document.getElementById('currentBlock').textContent = block;
    }

    calculateResults() {
        // Calculate average scores for each block
        const blockAverages = {};
        for (let block = 1; block <= 5; block++) {
            if (this.blockCounts[block] > 0) {
                blockAverages[block] = this.blockScores[block] / this.blockCounts[block];
            } else {
                blockAverages[block] = 0;
            }
        }

        // Find the block with highest average
        let maxBlock = 1;
        let maxScore = blockAverages[1];
        
        for (let block = 2; block <= 5; block++) {
            if (blockAverages[block] > maxScore) {
                maxScore = blockAverages[block];
                maxBlock = block;
            }
        }

        this.results = {
            profile: careerProfiles[maxBlock],
            blockScores: blockAverages,
            dominantBlock: maxBlock
        };

        this.showResults();
    }

    showResults() {
        const testContent = document.getElementById('testContent');
        const profile = this.results.profile;
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –±–ª–æ–∫–∏ –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞
        const sortedBlocks = Object.entries(this.results.blockScores)
            .sort(([,a], [,b]) => b - a)
            .slice(0, 3);

        const topProfiles = sortedBlocks.map(([blockNumber]) => ({
            block: parseInt(blockNumber),
            profile: careerProfiles[blockNumber],
            score: this.results.blockScores[blockNumber]
        }));

        testContent.innerHTML = `
            <div class="results-container">
                <div class="results-header">
                    <div class="success-icon">üéâ</div>
                    <h1>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!</h1>
                    <p>–í–∞—à –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω</p>
                </div>

                <!-- –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ñ–∏–ª—å -->
                <div class="profile-card main-profile">
                    <div class="profile-header">
                        <div class="profile-badge main-badge">üèÜ –û—Å–Ω–æ–≤–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</div>
                        <h2>${profile.title}</h2>
                        <h3>${profile.role}</h3>
                        <div class="profile-score">
                            –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${(this.results.blockScores[this.results.dominantBlock] * 20).toFixed(0)}%
                        </div>
                    </div>
                    
                    <div class="profile-description">
                        <p>${profile.description}</p>
                        <div class="characteristics">
                            <strong>–ö–ª—é—á–µ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</strong>
                            <p>${profile.characteristics}</p>
                        </div>
                    </div>

                    <!-- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ -->
                    <div class="alternative-roles">
                        <h4>üéØ –°–º–µ–∂–Ω—ã–µ —Ä–æ–ª–∏ –≤ —ç—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:</h4>
                        <div class="roles-tags">
                            ${profile.alternativeRoles.map(role => `
                                <span class="role-tag">${role}</span>
                            `).join('')}
                        </div>
                    </div>

                    <div class="roadmap-section">
                        <h3>üöÄ –í–∞—à–∞ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è</h3>
                        ${profile.roadmap.map(step => `
                            <div class="roadmap-step">
                                <div class="step-header">
                                    <span class="step-stage">${step.stage}</span>
                                    <h4>${step.title}</h4>
                                </div>
                                <div class="step-courses">
                                    ${step.courses.map(course => `
                                        <div class="course-item">
                                            <span class="course-icon">üìö</span>
                                            <span>${course}</span>
                                        </div>
                                    `).join('')}
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>

                <!-- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã -->
                ${topProfiles.length > 1 ? `
                    <div class="alternative-profiles">
                        <h3>üí° –î—Ä—É–≥–∏–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã</h3>
                        <div class="alternative-cards">
                            ${topProfiles.slice(1).map(altProfile => `
                                <div class="alternative-card">
                                    <div class="alt-profile-header">
                                        <div class="alt-badge">#${topProfiles.indexOf(altProfile) + 1}</div>
                                        <h4>${altProfile.profile.title}</h4>
                                        <h5>${altProfile.profile.role}</h5>
                                        <div class="alt-score">
                                            –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${(altProfile.score * 20).toFixed(0)}%
                                        </div>
                                    </div>
                                    <div class="alt-description">
                                        <p>${altProfile.profile.description}</p>
                                    </div>
                                    <div class="alt-roadmap">
                                        <strong>–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:</strong>
                                        <div class="alt-courses">
                                            ${altProfile.profile.roadmap[0].courses.map(course => `
                                                <div class="alt-course">üìö ${course}</div>
                                            `).join('')}
                                        </div>
                                    </div>
                                    <div class="alt-skills">
                                        <strong>–°–º–µ–∂–Ω—ã–µ —Ä–æ–ª–∏:</strong>
                                        <div class="alt-skill-tags">
                                            ${altProfile.profile.alternativeRoles.slice(0, 3).map(role => `
                                                <span class="alt-skill-tag">${role}</span>
                                            `).join('')}
                                        </div>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                ` : ''}

                <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±–ª–æ–∫–∞–º -->
                <div class="blocks-stats">
                    <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –±–ª–æ–∫–∞–º</h3>
                    <div class="stats-grid">
                        ${Object.entries(this.results.blockScores).map(([block, score]) => `
                            <div class="stat-block ${block == this.results.dominantBlock ? 'dominant' : ''}">
                                <div class="stat-block-header">
                                    <span class="block-name">–ë–ª–æ–∫ ${block}</span>
                                    <span class="block-score">${(score * 20).toFixed(0)}%</span>
                                </div>
                                <div class="stat-progress">
                                    <div class="stat-progress-bar" style="width: ${score * 20}%"></div>
                                </div>
                                <div class="block-profile">${careerProfiles[block].role}</div>
                            </div>
                        `).join('')}
                    </div>
                </div>

                <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ IT –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
                <div class="additional-fields">
                    <h3>üåê –î—Ä—É–≥–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ IT-–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h3>
                    <div class="fields-grid">
                        ${Object.entries(additionalITFields).map(([key, field]) => `
                            <div class="field-category" data-field="${key}">
                                <h4>${field.title}</h4>
                                <div class="field-roles">
                                    ${field.roles.map(role => `
                                        <div class="field-role">
                                            <div class="role-header">
                                                <strong>${role.name}</strong>
                                                <span class="role-level">${role.level}</span>
                                            </div>
                                            <p class="role-description">${role.description}</p>
                                            <div class="role-skills">
                                                ${role.skills.map(skill => `<span class="skill-tag">${skill}</span>`).join('')}
                                            </div>
                                        </div>
                                    `).join('')}
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>

                <div class="results-actions">
                    <button onclick="testManager.restartTest()" class="btn btn-secondary">
                        –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞
                    </button>
                    <button onclick="window.location.href='index.html'" class="btn btn-primary">
                        –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
                    </button>
                </div>
            </div>
        `;

        this.updateProgress(100, 5);
    }

    restartTest() {
        this.currentQuestionIndex = 0;
        this.answers = [];
        this.results = null;
        this.blockScores = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0};
        this.blockCounts = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0};
        this.showWelcomeScreen();
    }
}

// Initialize test manager
const testManager = new TestManager();

// Initialize test when page loads
document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('testContent')) {
        testManager.initializeTest();
    }
});