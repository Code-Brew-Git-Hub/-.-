// Roadmap Management
class RoadmapManager {
    constructor() {
        this.selectedProfession = null;
        this.learningPath = null;
    }

    initializeRoadmap() {
        const professionId = sessionStorage.getItem('selectedProfession') || 'frontend';
        this.loadRoadmap(professionId);
    }

    loadRoadmap(professionId) {
        this.selectedProfession = professionsData.find(p => p.id === professionId);
        this.learningPath = learningPaths[professionId];

        if (!this.selectedProfession || !this.learningPath) {
            this.showProfessionSelection();
            return;
        }

        this.renderRoadmap();
    }

    renderRoadmap() {
        const container = document.getElementById('roadmapContainer');
        
        container.innerHTML = `
            <div class="roadmap-container">
                <div class="roadmap-header">
                    <div class="profession-info">
                        <h1>–¢—Ä–∞–µ–∫—Ç–æ—Ä–∏—è –æ–±—É—á–µ–Ω–∏—è: ${this.selectedProfession.title}</h1>
                        <p class="profession-description">${this.selectedProfession.description}</p>
                        
                        <div class="roadmap-meta">
                            <div class="meta-item">
                                <span class="meta-icon">‚è±Ô∏è</span>
                                <span>–û–±—â–µ–µ –≤—Ä–µ–º—è: ${this.learningPath.estimatedTime}</span>
                            </div>
                            <div class="meta-item">
                                <span class="meta-icon">üéØ</span>
                                <span>–£—Ä–æ–≤–µ–Ω—å: Junior ‚Üí Middle</span>
                            </div>
                            <div class="meta-item">
                                <span class="meta-icon">üí∞</span>
                                <span>–ó–∞—Ä–ø–ª–∞—Ç–∞: ${this.selectedProfession.salaryRange.min.toLocaleString()}‚ÇΩ - ${this.selectedProfession.salaryRange.max.toLocaleString()}‚ÇΩ</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="learning-path">
                    ${this.learningPath.steps.map((step, index) => `
                        <div class="path-step ${index === 0 ? 'current' : ''}">
                            <div class="step-header">
                                <div class="step-number">${index + 1}</div>
                                <div class="step-info">
                                    <h3>${step.stage}</h3>
                                    <div class="step-duration">${step.duration}</div>
                                </div>
                            </div>
                            
                            <div class="step-content">
                                <div class="topics-list">
                                    <h4>–¢–µ–º—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:</h4>
                                    <ul>
                                        ${step.topics.map(topic => `<li>${topic}</li>`).join('')}
                                    </ul>
                                </div>
                                
                                <div class="resources-list">
                                    <h4>–†–µ—Å—É—Ä—Å—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:</h4>
                                    <div class="resources-grid">
                                        ${step.resources.map(resource => `
                                            <div class="resource-card ${resource.type}">
                                                <div class="resource-icon">
                                                    ${this.getResourceIcon(resource.type)}
                                                </div>
                                                <div class="resource-info">
                                                    <div class="resource-name">${resource.name}</div>
                                                    <div class="resource-type">${this.getResourceTypeName(resource.type)}</div>
                                                </div>
                                                <button class="resource-action" onclick="roadmapManager.openResource('${resource.url}')">
                                                    –û—Ç–∫—Ä—ã—Ç—å ‚Üí
                                                </button>
                                            </div>
                                        `).join('')}
                                    </div>
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>

                <div class="career-growth">
                    <h2>–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç</h2>
                    <div class="growth-timeline">
                        ${Object.entries(this.selectedProfession.growthPath).map(([level, time]) => `
                            <div class="growth-stage">
                                <div class="stage-level">${this.getLevelDisplayName(level)}</div>
                                <div class="stage-time">${time}</div>
                                <div class="stage-description">
                                    ${this.getLevelDescription(level, this.selectedProfession.title)}
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>

                <div class="skills-mastery">
                    <h2>–û—Å–≤–æ–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤</h2>
                    <div class="skills-roadmap">
                        ${this.selectedProfession.skills.map(skill => `
                            <div class="skill-roadmap-item">
                                <div class="skill-info">
                                    <span class="skill-name">${skill.name}</span>
                                    <span class="skill-importance ${skill.importance}">
                                        ${this.getImportanceName(skill.importance)}
                                    </span>
                                </div>
                                <div class="skill-progress">
                                    <div class="progress-track">
                                        ${this.learningPath.steps.map((step, index) => `
                                            <div class="progress-milestone ${this.getSkillMilestone(skill, index)}" 
                                                 title="${step.stage}">
                                                ${index + 1}
                                            </div>
                                        `).join('')}
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>

                <div class="roadmap-actions">
                    <button onclick="window.location.href='test.html'" class="btn btn-secondary">
                        –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ
                    </button>
                    <button onclick="window.print()" class="btn btn-outline">
                        üìÑ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–ª–∞–Ω
                    </button>
                    <button onclick="roadmapManager.startLearning()" class="btn btn-primary">
                        üöÄ –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
                    </button>
                </div>
            </div>
        `;
    }

    getResourceIcon(type) {
        const icons = {
            'course': 'üìö',
            'tutorial': 'üé¨',
            'book': 'üìñ',
            'challenge': 'üèÜ',
            'docs': 'üìã',
            'internship': 'üíº',
            'practice': 'üîß'
        };
        return icons[type] || 'üìÑ';
    }

    getResourceTypeName(type) {
        const names = {
            'course': '–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å',
            'tutorial': '–í–∏–¥–µ–æ—É—Ä–æ–∫',
            'book': '–ö–Ω–∏–≥–∞',
            'challenge': '–ü—Ä–∞–∫—Ç–∏–∫–∞',
            'docs': '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
            'internship': '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞',
            'practice': '–ü—Ä–æ–µ–∫—Ç'
        };
        return names[type] || type;
    }

    getLevelDisplayName(level) {
        const names = {
            'junior': 'Junior',
            'middle': 'Middle',
            'senior': 'Senior',
            'lead': 'Team Lead'
        };
        return names[level] || level;
    }

    getLevelDescription(level, profession) {
        const descriptions = {
            'junior': `–ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å. –ò–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤ ${profession}, —Ä–∞–±–æ—Ç–∞ —Å –º–µ–Ω—Ç–æ—Ä–æ–º.`,
            'middle': `–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ –∑–∞–¥–∞—á–∞–º–∏, —É–≥–ª—É–±–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.`,
            'senior': `–≠–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏, –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.`,
            'lead': `–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ.`
        };
        return descriptions[level] || '';
    }

    getImportanceName(importance) {
        const names = {
            'critical': '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π',
            'important': '–í–∞–∂–Ω—ã–π',
            'nice-to-have': '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π'
        };
        return names[importance] || importance;
    }

    getSkillMilestone(skill, stepIndex) {
        // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–∞–≤—ã–∫–æ–≤ –ø–æ —ç—Ç–∞–ø–∞–º
        if (stepIndex === 0 && skill.importance === 'critical') return 'completed';
        if (stepIndex <= 1 && skill.importance === 'important') return 'completed';
        if (stepIndex <= 2) return 'in-progress';
        return 'planned';
    }

    openResource(url) {
        if (url && url !== '#') {
            window.open(url, '_blank');
        } else {
            alert('–†–µ—Å—É—Ä—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!');
        }
    }

    startLearning() {
        alert('–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å –ø–µ—Ä–≤–æ–≥–æ —ç—Ç–∞–ø–∞ –æ–±—É—á–µ–Ω–∏—è.');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Å–∏—Å—Ç–µ–º–æ–π –æ–±—É—á–µ–Ω–∏—è
    }

    showProfessionSelection() {
        const container = document.getElementById('roadmapContainer');
        container.innerHTML = `
            <div class="profession-selection">
                <h2>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏</h2>
                <div class="selection-grid">
                    ${professionsData.map(profession => `
                        <div class="profession-option" onclick="roadmapManager.loadRoadmap('${profession.id}')">
                            <h3>${profession.title}</h3>
                            <p>${profession.description}</p>
                            <div class="salary">${profession.salaryRange.min.toLocaleString()}‚ÇΩ - ${profession.salaryRange.max.toLocaleString()}‚ÇΩ</div>
                        </div>
                    `).join('')}
                </div>
            </div>
        `;
    }
}

// Initialize roadmap manager
const roadmapManager = new RoadmapManager();

// Initialize roadmap when page loads
document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('roadmapContainer')) {
        roadmapManager.initializeRoadmap();
    }
});

// Learning resources database
const learningResources = {
    "frontend": [
        {
            stage: "–û—Å–Ω–æ–≤—ã",
            resources: [
                { name: "HTML Academy", type: "course", url: "#", description: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ HTML –∏ CSS" },
                { name: "freeCodeCamp", type: "course", url: "#", description: "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏" },
                { name: "MDN Web Docs", type: "docs", url: "#", description: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –≤–µ–±-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º" }
            ]
        },
        {
            stage: "JavaScript",
            resources: [
                { name: "JavaScript.info", type: "tutorial", url: "#", description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —É—á–µ–±–Ω–∏–∫ JavaScript" },
                { name: "You Don't Know JS", type: "book", url: "#", description: "–°–µ—Ä–∏—è –∫–Ω–∏–≥ –æ JavaScript" },
                { name: "JavaScript30", type: "practice", url: "#", description: "30 –¥–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ JavaScript" }
            ]
        },
        {
            stage: "–§—Ä–µ–π–º–≤–æ—Ä–∫–∏",
            resources: [
                { name: "React Official Tutorial", type: "tutorial", url: "#", description: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ React" },
                { name: "Vue.js Guide", type: "docs", url: "#", description: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Vue.js" },
                { name: "React Practice Projects", type: "practice", url: "#", description: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –Ω–∞ React" }
            ]
        }
    ],
    "backend": [
        {
            stage: "–û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è",
            resources: [
                { name: "Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö", type: "course", url: "#", description: "–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è" },
                { name: "Java Basics", type: "course", url: "#", description: "–û—Å–Ω–æ–≤—ã Java –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è" },
                { name: "C# Fundamentals", type: "course", url: "#", description: "–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞–Ω–∏—è C#" }
            ]
        },
        {
            stage: "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
            resources: [
                { name: "SQL –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö", type: "course", url: "#", description: "–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å SQL" },
                { name: "Database Design", type: "course", url: "#", description: "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö" },
                { name: "MongoDB University", type: "course", url: "#", description: "–ö—É—Ä—Å—ã –ø–æ NoSQL –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö" }
            ]
        }
    ],
    "data-analyst": [
        {
            stage: "–û—Å–Ω–æ–≤—ã –∞–Ω–∞–ª–∏–∑–∞",
            resources: [
                { name: "SQL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö", type: "course", url: "#", description: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π SQL –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤" },
                { name: "Python –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö", type: "course", url: "#", description: "Pandas –∏ NumPy" },
                { name: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤", type: "course", url: "#", description: "–û—Å–Ω–æ–≤—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏" }
            ]
        }
    ],
    "ux-ui designer": [
        {
            stage: "–û—Å–Ω–æ–≤—ã –¥–∏–∑–∞–π–Ω–∞",
            resources: [
                { name: "Figma Basics", type: "course", url: "#", description: "–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã –≤ Figma" },
                { name: "UI Design Principles", type: "course", url: "#", description: "–ü—Ä–∏–Ω—Ü–∏–ø—ã –¥–∏–∑–∞–π–Ω–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤" },
                { name: "Color Theory", type: "course", url: "#", description: "–¢–µ–æ—Ä–∏—è —Ü–≤–µ—Ç–∞ –≤ –¥–∏–∑–∞–π–Ω–µ" }
            ]
        }
    ],
    "qa-engineer": [
        {
            stage: "–û—Å–Ω–æ–≤—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            resources: [
                { name: "Software Testing Fundamentals", type: "course", url: "#", description: "–û—Å–Ω–æ–≤—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ü–û" },
                { name: "Test Design Techniques", type: "course", url: "#", description: "–¢–µ—Ö–Ω–∏–∫–∏ —Ç–µ—Å—Ç-–¥–∏–∑–∞–π–Ω–∞" },
                { name: "Bug Tracking Systems", type: "course", url: "#", description: "–†–∞–±–æ—Ç–∞ —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –±–∞–≥-—Ç—Ä–µ–∫–∏–Ω–≥–∞" }
            ]
        }
    ],
    "product-manager": [
        {
            stage: "–û—Å–Ω–æ–≤—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞",
            resources: [
                { name: "Product Management 101", type: "course", url: "#", description: "–û—Å–Ω–æ–≤—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞" },
                { name: "Agile Methodology", type: "course", url: "#", description: "–ì–∏–±–∫–∏–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏" },
                { name: "Stakeholder Management", type: "course", url: "#", description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä–∞–º–∏" }
            ]
        }
    ]
};

// Roadmap Manager
class RoadmapManager {
    constructor() {
        this.selectedProfession = null;
    }

    initializeRoadmap() {
        const professionId = sessionStorage.getItem('selectedProfession');
        
        if (!professionId) {
            this.showProfessionSelection();
            return;
        }

        this.loadRoadmap(professionId);
    }

    loadRoadmap(professionId) {
        this.selectedProfession = professionsData.find(p => p.id === professionId);
        
        if (!this.selectedProfession) {
            this.showProfessionSelection();
            return;
        }

        this.renderRoadmap();
    }

    renderRoadmap() {
        const roadmapContent = document.getElementById('roadmapContent');
        const resources = learningResources[this.selectedProfession.id] || [];

        roadmapContent.innerHTML = `
            <div class="roadmap-header">
                <h1>–¢—Ä–∞–µ–∫—Ç–æ—Ä–∏—è –æ–±—É—á–µ–Ω–∏—è: ${this.selectedProfession.title}</h1>
                <p class="profession-description">${this.selectedProfession.description}</p>
                
                <div class="roadmap-summary">
                    <div class="summary-item">
                        <strong>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> ${this.selectedProfession.learningPath.duration}
                    </div>
                    <div class="summary-item">
                        <strong>–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:</strong> ${this.selectedProfession.difficulty}
                    </div>
                    <div class="summary-item">
                        <strong>–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –∑–∞—Ä–ø–ª–∞—Ç—ã:</strong> ${this.selectedProfession.salary}
                    </div>
                </div>
            </div>

            <div class="learning-path-detailed">
                <h2>–ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è</h2>
                
                ${this.selectedProfession.learningPath.steps.map((step, index) => `
                    <div class="path-step">
                        <div class="step-header">
                            <div class="step-number">${index + 1}</div>
                            <div class="step-info">
                                <h3>${step}</h3>
                            </div>
                        </div>
                        
                        ${resources[index] ? `
                            <div class="step-resources">
                                <h4>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã:</h4>
                                <div class="resources-grid">
                                    ${resources[index].resources.map(resource => `
                                        <div class="resource-card">
                                            <div class="resource-type ${resource.type}">
                                                ${this.getResourceTypeIcon(resource.type)}
                                            </div>
                                            <div class="resource-content">
                                                <div class="resource-name">${resource.name}</div>
                                                <div class="resource-description">${resource.description}</div>
                                            </div>
                                            <button class="resource-action" onclick="roadmapManager.openResource('${resource.url}')">
                                                –ò–∑—É—á–∞—Ç—å ‚Üí
                                            </button>
                                        </div>
                                    `).join('')}
                                </div>
                            </div>
                        ` : ''}
                    </div>
                `).join('')}
            </div>

            <div class="career-advice">
                <h2>–°–æ–≤–µ—Ç—ã –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –∫–∞—Ä—å–µ—Ä—ã</h2>
                <div class="advice-grid">
                    <div class="advice-card">
                        <h3>üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏–∫–∞</h3>
                        <p>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ. –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–µ–±–æ–ª—å—à–∏—Ö –∑–∞–¥–∞—á –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–π—Ç–µ.</p>
                    </div>
                    <div class="advice-card">
                        <h3>üë• –°–æ–æ–±—â–µ—Å—Ç–≤–æ</h3>
                        <p>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ IT-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞–º, —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ –º–µ–Ω—Ç–æ—Ä–æ–≤.</p>
                    </div>
                    <div class="advice-card">
                        <h3>üìö –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</h3>
                        <p>IT-–∏–Ω–¥—É—Å—Ç—Ä–∏—è –±—ã—Å—Ç—Ä–æ –º–µ–Ω—è–µ—Ç—Å—è. –†–µ–≥—É–ª—è—Ä–Ω–æ –∏–∑—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –ø–æ–¥—Ö–æ–¥—ã.</p>
                    </div>
                    <div class="advice-card">
                        <h3>üéØ –¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å</h3>
                        <p>–°—Ç–∞–≤—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–µ–ª–∏ –Ω–∞ –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø –æ–±—É—á–µ–Ω–∏—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å.</p>
                    </div>
                </div>
            </div>

            <div class="next-steps">
                <h2>–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</h2>
                <div class="steps-list">
                    <div class="step-item">
                        <strong>1. –ù–∞—á–Ω–∏—Ç–µ —Å –æ—Å–Ω–æ–≤</strong>
                        <p>–ò–∑—É—á–∏—Ç–µ –ø–µ—Ä–≤—ã–µ 2 —ç—Ç–∞–ø–∞ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è</p>
                    </div>
                    <div class="step-item">
                        <strong>2. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç</strong>
                        <p>–ü—Ä–∏–º–µ–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –¥–ª—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ</p>
                    </div>
                    <div class="step-item">
                        <strong>3. –ù–∞–π–¥–∏—Ç–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É</strong>
                        <p>–ü–æ—Å–ª–µ –æ—Å–≤–æ–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–µ–º –Ω–∞—á–Ω–∏—Ç–µ –∏—Å–∫–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏</p>
                    </div>
                    <div class="step-item">
                        <strong>4. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è</strong>
                        <p>–û—Å–≤–∞–∏–≤–∞–π—Ç–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ—Å—å –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏</p>
                    </div>
                </div>
            </div>

            <div class="roadmap-actions">
                <button onclick="window.location.href='test.html'" class="btn btn-secondary">
                    –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ
                </button>
                <button onclick="window.location.href='index.html'" class="btn btn-secondary">
                    –°–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
                </button>
                <button onclick="roadmapManager.startLearning()" class="btn btn-primary">
                    –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
                </button>
            </div>
        `;
    }

    getResourceTypeIcon(type) {
        const icons = {
            'course': 'üìö',
            'tutorial': 'üé¨', 
            'book': 'üìñ',
            'docs': 'üìã',
            'practice': 'üîß'
        };
        return icons[type] || 'üìÑ';
    }

    openResource(url) {
        if (url && url !== '#') {
            window.open(url, '_blank');
        } else {
            alert('–†–µ—Å—É—Ä—Å —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏.');
        }
    }

    startLearning() {
        const firstStep = this.selectedProfession.learningPath.steps[0];
        alert(`–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å —ç—Ç–∞–ø–∞: "${firstStep}"`);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Å–∏—Å—Ç–µ–º–æ–π –æ–±—É—á–µ–Ω–∏—è
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–∫—Ä—ã—Ç—å –ø–µ—Ä–≤—ã–π —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Ä–µ—Å—É—Ä—Å
        const resources = learningResources[this.selectedProfession.id];
        if (resources && resources[0] && resources[0].resources[0]) {
            this.openResource(resources[0].resources[0].url);
        }
    }

    showProfessionSelection() {
        const roadmapContent = document.getElementById('roadmapContent');
        
        roadmapContent.innerHTML = `
            <div class="profession-selection">
                <h1>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏</h1>
                <p>–ò–ª–∏ –ø—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</p>
                
                <div class="selection-grid">
                    ${professionsData.map(profession => `
                        <div class="profession-option" onclick="roadmapManager.loadRoadmap('${profession.id}')">
                            <h3>${profession.title}</h3>
                            <p>${profession.description}</p>
                            <div class="profession-meta">
                                <span class="salary">${profession.salary}</span>
                                <span class="duration">${profession.learningPath.duration}</span>
                            </div>
                        </div>
                    `).join('')}
                </div>
                
                <div style="text-align: center; margin-top: 2rem;">
                    <button onclick="window.location.href='test.html'" class="btn btn-primary btn-large">
                        –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
                    </button>
                </div>
            </div>
        `;
    }
}

// Initialize roadmap manager
const roadmapManager = new RoadmapManager();

// Initialize roadmap when page loads
document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('roadmapContent')) {
        roadmapManager.initializeRoadmap();
    }
});